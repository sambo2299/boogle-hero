{"version":3,"sources":["Components/Header/Header.css","Components/Input/Input.css","Components/Layout/Layout.css","Components/Blocks/Blocks.css","Components/Blocks/Block/Block.css","Components/RightPan/RightPan.css","Components/Timer/Timer.css","Containers/BoogleContainer/BoogleContainer.css","Components/WordLists/WordLists.css","App.css","Components/Header/Header.js","Components/Layout/Layout.js","Components/Blocks/Block/Block.js","Components/Blocks/Blocks.js","Components/Input/Input.js","Components/Button/Button.js","Components/LeftPan/LeftPan.js","Components/Timer/Timer.js","Components/WordLists/WordLists.js","Components/RightPan/RightPan.js","lib/helper.js","lib/Apis.js","Containers/BoogleContainer/BoogleContainer.js","App.js","serviceWorker.js","index.js","Components/Button/Button.css","Components/LeftPan/LeftPan.css"],"names":["module","exports","header","props","className","classes","Header","layout","MainContainer","children","block","letterBlock","letters","map","letterItm","idx","key","letterBox","Blocks","nextProps","nextState","letterLists","this","letterBuilderLists","row","length","push","splice","matrix","rowitm","LetterBlock","Component","input","cuword","currentWord","onSubmit","submit","InputForm","type","Input","onChange","checkLetter","value","disabled","autoFocus","button","Button","refresh","ButtonRefresh","ButtonStart","join","onClick","clicked","leftpan","Block","StartBlock","startBoogle","start","wordSubmit","disabledInput","ErrorMessage","errorMessage","timer","Math","floor","Timer","wordLists","wordlist","playing","userWords","itms","Items","score","validList","ItemsScore","word","totalscore","Lists","rightPan","id","ruleValidation","matSize","Promise","resolve","reject","split","probables","culetterLists","elemIdx","elemLetter","letterIdx","forEach","itm","indexOf","verify","verifyProbables","i","probable","findProbables","letter","letterIdxs","sols","solution","flat","filter","mat","idxs","rules","ruleItm","rule","substractor","words","parseInt","l","sort","a","b","getWords","getRule","instance","axios","create","baseURL","timeout","APIS","request","method","url","options","data","qs","stringify","post","query","get","BoogleContainer","state","matrixSize","fetchLetters","Apis","then","resp","prevState","setState","startTimer","catch","err","setInterval","setTimeout","clearInterval","boogleTimed","console","log","refreshBoogleHandler","startBoogleHandler","checkLetterHandler","e","target","toLowerCase","validateWord","Helper","validation","wordSubmitHandler","preventDefault","uwordsLists","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.15c458e2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"Header\":\"Header__Header__3PdNJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"InputForm\":\"Input__InputForm__247Xh\",\"Input\":\"Input__Input__2qBXf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainContainer\":\"Layout__MainContainer__25bYR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"LetterBlock\":\"Blocks__LetterBlock__32L8d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"letterBox\":\"Block__letterBox__1gKvL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"RightPan__Block__L8Yzi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Timer\":\"Timer__Timer__3gZuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"BoogleContainer__Block__2qJMD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"WordLists__Block__8YlGW\",\"List\":\"WordLists__List__2wxlJ\",\"Items\":\"WordLists__Items__2u3qg\",\"ItemsScore\":\"WordLists__ItemsScore__1P-iY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App__App__1o-Fp\"};","import React from 'react';\n\nimport classes from './Header.css'\n\nimport './Header.css';\n\nconst header = (props) => {\n    return (\n        <div className={classes.Header} >\n            <h2>Boogle Game</h2>\n        </div>\n    )\n}\n\n\nexport default header;","import React from \"react\";\n\n\nimport Header from '../Header/Header';\nimport classes from './Layout.css';\n\nconst layout = (props) =>\n    <div className={classes.MainContainer}>\n        <Header \n        />\n        <main>\n            {props.children}\n        </main>        \n    </div>\n\n\nexport default layout;","import React from 'react'\n\nimport classes from './Block.css';\n\nconst block = (props) => {\n    let letterBlock = [];\n    letterBlock = props.letters.map((letterItm, idx) => {\n        return (\n            <td \n                key={idx} \n                className={classes.letterBox}>\n                <span>\n                    {letterItm}\n                </span>\n            </td>\n        );\n    });   \n    return (\n    <tr>\n        {letterBlock}\n    </tr>\n    ); \n}\n\nexport default block;\n","import React, { Component } from \"react\";\n\nimport classes from './Blocks.css'\nimport Block from './Block/Block';\n\nclass Blocks extends Component {\n\n    shouldComponentUpdate(nextProps, nextState){\n        return (\n            nextProps.letterLists !== this.props.letterLists \n            );\n    }\n\n    /* componentDidUpdate() {\n        console.log('will update')\n    } */\n\n    render () {\n        let letterLists = this.props.letterLists ? [...this.props.letterLists] : null;\n        let letterBuilderLists = [];\n        let row = letterLists ? [] : null;\n        if(letterLists) {\n            while(letterLists.length) {\n                letterBuilderLists.push(letterLists.splice(0,this.props.matrix))\n            }\n            row = letterBuilderLists.map((rowitm,idx) =>\n                        <Block key={idx} letters={rowitm} />\n            );\n        }\n        \n        return (\n            <table className={classes.LetterBlock}>\n                <tbody>\n                    {row}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default Blocks;","import React from 'react';\n\nimport classes from './Input.css'\nconst input = (props) => {\n    let cuword = props.currentWord ? props.currentWord : '';\n    return (\n        <form onSubmit={props.submit} className={classes.InputForm}>\n            <input type=\"text\" className={classes.Input}\n            onChange={props.checkLetter}\n            value={cuword} \n            disabled={props.disabled}\n            autoFocus\n            ></input>\n        </form>\n\n    )\n} \n\n\nexport default input;","import React from 'react'\n\nimport classes from './Button.css';\n\nconst button = (props) => \n<button className={[classes.Button, props.refresh ? classes.ButtonRefresh : classes.ButtonStart].join(' ')} onClick={props.clicked}>\n    {props.children}\n</button>\n\nexport default button;","import React from 'react';\n\nimport Blocks from '../Blocks/Blocks';\nimport Input from '../Input/Input';\nimport Button from '../Button/Button'\n\nimport classes from './LeftPan.css'\n\nconst leftpan = (props) => {\n    return (\n\n        <div className={classes.Block}>\n           \n            { props.letterLists ?\n                <div>\n                    <Blocks  \n                        letterLists={props.letterLists} matrix={props.matrix}/>\n                </div> \n            : \n            <div className={classes.StartBlock}>\n                    <p>Click start button to Start Boogle</p>\n                    <Button  clicked={() => props.startBoogle(3)} start=\"true\" value=\"3\">\n                        Start 3x3\n                    </Button>\n                    <Button  clicked={() => props.startBoogle(4)} start=\"true\" value=\"4\">\n                        Start 4x4\n                    </Button>                    \n                    <Button  clicked={() => props.startBoogle(5)} start=\"true\" value=\"5\">\n                        Start 5x5\n                    </Button>                    \n                </div>\n            } \n           {props.letterLists && <Input \n                submit={props.wordSubmit}\n                checkLetter={props.checkLetter}\n                currentWord={props.currentWord}\n                disabled={props.disabledInput}\n            />}\n            <p className={classes.ErrorMessage}>{props.errorMessage}</p>\n        </div>\n    );\n}\n\nexport default leftpan;","import React from 'react'\n\nimport classes from './Timer.css';\n\nconst timer = props =>{ \n    let timer = props.timer ?  <span >\n    { Math.floor(props.timer/60)  } : { props.timer > 60 ? props.timer-60: props.timer} \n</span> : null\n    return (\n        <div className={classes.Timer}>\n            {timer}\n        </div>\n    ) \n};\n\nexport default timer;","import React from 'react'\n\nimport classes from './WordLists.css'\n\nconst wordLists = (props) => {\n    let wordlist = null;\n    if(props.playing) {\n        wordlist = props.userWords  ? props.userWords.map((itms, idx) =><li key={idx} className={classes.Items}>{itms}</li>) : null;\n    };\n    // console.log(\"score\",props.score);\n    if(props.score && props.score.validList) {\n        wordlist = props.score  ? props.score.validList.map((itms, idx) =><li key={idx} className={classes.ItemsScore}>{itms.word} {itms.score}</li>) : null;\n    }\n    // let header = {}\n    return (\n        <div className={classes.Block}>\n            { props.score && <h4>Total score: {props.score.totalscore}</h4>}\n        <ul className={classes.Lists}>\n            {\n            wordlist\n            }\n        </ul>\n    </div>\n    );\n}\n\nexport default wordLists;","import React from 'react'\n\nimport classes from './RightPan.css';\nimport Timer from '../Timer/Timer';\nimport Button from '../Button/Button';\nimport Block from '../WordLists/WordLists';\n\nconst rightPan = (props) => {\n\n    return(\n        <div className={classes.Block}>\n        { props.playing && <Button\n            clicked={props.refresh}\n            refresh=\"true\">\n            Refresh\n        </Button>}\n        <Timer timer={props.timer}/>\n        <Block id=\"wordboard\"\n            playing={props.playing}\n            userWords={props.userWords}\n            />\n        {props.score && <Block id=\"scoreboard\" \n            playing={props.playing}\n            score={props.score}\n            />}\n    </div>\n    )\n\n}\n  \n\n\nexport default rightPan;","const getRule = (mat, idx) => {\n    const rules = idx.map(id => {\n        const substractor = mat + (Math.floor(idx / mat) * mat);\n        if ((substractor - idx) > 1 && (substractor - idx) < mat) {\n            return ({\n                idx: id,\n                rule: [1, mat, mat - 1, mat + 1]\n            });\n        } else {\n            return ({\n                idx: id,\n                rule: [1, mat, (mat - idx === 1) ? mat - 1 : [mat + 1, mat - 1]].flat()\n            });\n        }\n    });\n    return (rules)\n};\n\nconst getWords = (letters, rules, mat) => {\n    const probable = rules.map(ruleItm => {\n        let idx = ruleItm.idx;\n        let rule = ruleItm.rule;\n        const substractor = mat + (Math.floor(idx / mat) * mat);\n        const words = rule.map(itms => {\n            itms = parseInt(itms);\n            const words = [];\n            if (\n                !((substractor - idx) === 1 && itms === 1) &&\n                !((substractor - idx) === mat && itms === (mat - 1)) &&\n                letters[idx + itms]) {\n                words.push({ l: letters[idx + itms], i: idx + itms });\n            }\n            if (\n                !((substractor - idx === mat) && itms === 1) &&\n                !((substractor - idx) === 1 && itms === (mat - 1)) &&\n                !((substractor - idx) === mat && itms > mat) &&\n                letters[idx - itms]\n            ) {\n                words.push({ l: letters[idx - itms], i: idx - itms });\n            }\n            return words;\n        })\n        return ({\n            id: idx,\n            solution: words.flat().sort((a, b) => (a.i - b.i))\n        });\n    })\n    return (probable)\n};\n\nconst ruleValidation = (word, letterLists, matSize) => new Promise((resolve, reject) => {\n    const letters = word.split('');\n    let probables = [];\n    const culetterLists = []\n    for (let elemIdx = 0; elemIdx < letters.length; elemIdx++) {\n        const elemLetter = letters[elemIdx];\n        let letterIdx = [];\n        letterLists.forEach((itm, idx) => {\n            if (itm === elemLetter && culetterLists.indexOf(`${elemLetter}_${idx}`) < 0) letterIdx.push(idx);\n        });\n        const verify = verifyProbables(elemIdx, elemLetter, probables, letterIdx);\n        if (!verify) { return reject('not verified!!!'); }\n        else {\n            letterIdx = elemIdx > 0 ? verify.map(i => i.i) : letterIdx;\n            const probable = findProbables(matSize, letterIdx, letterLists)\n            probables = probable;\n            culetterLists.push(`${elemLetter}_${probable[0].id}`);\n        }\n    };\n    return resolve(true);\n});\n\nconst verifyProbables = (letterIdx, letter, probable, letterIdxs) => {\n    if (letterIdx < 1) {\n        return letterIdxs;\n    }\n    probable = probable.map(i => i.solution).flat();\n    const sols = probable.filter(itm => letterIdxs.indexOf(itm.i) > -1);\n    return (sols.length ? sols : false);\n}\n\nconst findProbables = (mat, idxs, letterLists) => {\n    const rules = getRule(mat, idxs);\n    const words = getWords(letterLists, rules, mat);\n    return words;\n};\n\nexport {\n    ruleValidation\n};","import axios from 'axios';\nimport qs from 'qs';\n\nconst instance = axios.create({\n    baseURL: 'http://localhost:4999/',\n    timeout: 1000,\n});\n\nconst APIS = {\n    GET_LETTERS: '/api/getLetters',\n    CHECK_WORD: '/api/checkword',\n    GET_SCORE: '/api/getScore'\n}\n\nconst request = (method, url, options) => {\n        switch(method) {\n            case 'POST':\n                const data = qs.stringify(options);\n                return(instance.post(`${url}`, data));\n            case 'GET':\n                const query = options ? `?${options}`: '';\n                return(instance.get(`${url}${query}`));\n            default:\n                return false;\n        }\n}\n\nexport {\n    APIS,\n    request\n}","import React, { Component } from 'react'\n\nimport LeftPan from '../../Components/LeftPan/LeftPan';\nimport RightPan from '../../Components/RightPan/RightPan';\nimport classes from './BoogleContainer.css';\nimport * as Helper from '../../lib/helper';\nimport * as Apis from '../../lib/Apis';\n\n\n\nclass BoogleContainer extends Component {\n  state = {\n    letterLists: null,\n    errorMessage: null,\n    currentWord: null,\n    userWords: null,\n    timer: null,\n    playing: false,\n    matrixSize: null,\n    score: null\n  }\n\n  fetchLetters = (mat) => {\n    mat = mat || this.state.matrixSize;\n    const request = Apis.request('GET', Apis.APIS.GET_LETTERS, 'mat=' + mat)\n    if (request)\n      request\n        .then(resp => {\n          if (resp && resp.data) {\n            const prevState = { ...this.state };\n            prevState['letterLists'] = resp.data.letters\n            this.setState({\n              letterLists: prevState.letterLists,\n              playing: true\n            }, () => {\n              this.startTimer();\n            });\n          }\n        })\n        .catch(err => { });\n  }\n\n  startTimer = () => {\n    let timer = 0;\n    this.timer = setInterval(() => {\n      this.setState({\n        timer: timer\n      }, () => {\n        timer++;\n      })\n    }, 1000)\n    this.timeout = setTimeout(() => {\n      clearInterval(this.timer);\n      this.boogleTimed();\n    }, 60000 * 0.5)\n  }\n\n  boogleTimed = () => {\n    this.setState({\n      disabledInput: true,\n      errorMessage: 'BOOGLE TIMEOUT, GETTING YOUR SCORE'\n    });\n    const words = this.state.userWords ? [...this.state.userWords] : [];\n    const request = Apis.request('POST', Apis.APIS.GET_SCORE, { words: words })\n    if (request)\n      request\n        .then(resp => {\n          this.setState({\n            score: resp.data.score,\n            errorMessage: null\n          })\n        }).catch(err => {\n          console.log(err);\n        })\n  }\n\n  refreshBoogleHandler = () => {\n    clearInterval(this.timer);\n    this.setState({\n      timer: null,\n      userWords: null,\n      playing: null,\n      score: null,\n      errorMessage:null,\n      disabledInput: null\n    })\n    this.fetchLetters();\n  }\n\n  startBoogleHandler = (mat) => {\n    this.setState({\n      matrixSize: mat\n    })\n    this.fetchLetters(mat);\n  }\n\n  checkLetterHandler = (e) => {\n    const word = e.target.value;\n    const letter = (e.target.value && e.target.value.length) ? e.target.value[e.target.value.length - 1].toLowerCase() : null;\n    const letterLists = this.state.letterLists;\n    if (!letter) {\n      this.setState({\n        currentWord: e.target.value,\n        errorMessage: null\n      });\n    }\n    else if (letterLists.indexOf(letter[letter.length - 1]) === -1) {\n      this.setState({\n        errorMessage: 'Letter do not exists'\n      })\n    } else {\n      this.setState({\n        currentWord: word,\n        errorMessage: null,\n      });\n    }\n  }\n\n  validateWord = (word) => new Promise((resolve, reject) => {\n    Helper.ruleValidation(word, this.state.letterLists, this.state.matrixSize)\n      .then(resp => {\n        const request = Apis.request('GET', Apis.APIS.CHECK_WORD, 'word=' + word)\n        if (request)\n          request\n            .then(resp => {\n              return resolve(resp.data.validation);\n            })\n            .catch(err => {\n              console.log(err);\n              return reject(err)\n            })\n      })\n      .catch(err => {\n        console.log(err);\n        return resolve(false)\n      })\n\n    // i-5, \n  });\n\n  wordSubmitHandler = (e) => {\n    e.preventDefault();\n    const currentWord = this.state.currentWord.toLowerCase();\n    if (this.state.userWords && this.state.userWords.indexOf(currentWord) > -1) {\n      this.setState({\n        errorMessage: 'Word already exists',\n        currentWord: null\n      })\n    } else {\n      this.validateWord(currentWord)\n        .then(resp => {\n          if (!resp) {\n            this.setState({\n              errorMessage: 'Word not valid'\n            });\n            setTimeout(() => {\n              this.setState({\n                errorMessage: null\n              });\n            }, 3000)\n          } else {\n            const uwordsLists = this.state.userWords ? [...this.state.userWords, currentWord] : [currentWord];\n            this.setState({\n              userWords: uwordsLists,\n              currentWord: null\n            })\n          }\n        }).catch(err => {\n          console.log(err);\n        })\n    }\n  }\n\n  render() {\n    return (\n      <div className={classes.Block}>\n        <LeftPan\n          startBoogle={this.startBoogleHandler}\n          letterLists={this.state.letterLists}\n          wordSubmit={this.wordSubmitHandler}\n          checkLetter={this.checkLetterHandler}\n          errorMessage={this.state.errorMessage}\n          currentWord={this.state.currentWord}\n          playing={this.state.playing}\n          matrix={this.state.matrixSize}\n          disabledInput={this.state.disabledInput}\n        />\n        <RightPan\n          refresh={this.refreshBoogleHandler}\n          timer={this.state.timer}\n          playing={this.state.playing}\n          userWords={this.state.userWords}\n          score={this.state.score}\n\n        />\n      </div>\n    )\n\n  }\n}\n\nexport default BoogleContainer;","import React from 'react';\n\nimport './App.css';\nimport MainLayout from './Components/Layout/Layout'; \nimport BoogleContainer from './Containers/BoogleContainer/BoogleContainer';\n\nfunction App() {\n  return (\n    <div className=\"App\">      \n      <MainLayout>\n        <BoogleContainer />\n      </MainLayout>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Button\":\"Button__Button__1JdUk\",\"ButtonRefresh\":\"Button__ButtonRefresh__3oUyH\",\"ButtonStart\":\"Button__ButtonStart__1-6ho\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Block\":\"LeftPan__Block__Jyop2\",\"ErrorMessage\":\"LeftPan__ErrorMessage__10v8s\",\"StartBlock\":\"LeftPan__StartBlock__35ivG\",\"InnerBlock\":\"LeftPan__InnerBlock__FUDee\",\"Input\":\"LeftPan__Input__3V4Gd\"};"],"sourceRoot":""}